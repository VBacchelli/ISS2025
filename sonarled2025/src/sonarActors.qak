System sonarled2025

mqttBroker "192.168.1.132" : 1883 eventTopic "sensor/sonar" //TODO metti ip giusto

Dispatch sonarstart : sonarstart(X)
Dispatch sonarstop  : sonarstop(X)

Event distancestream : distancestream(D)

Context ctx_sonar ip [ host="localhost" port=8075] 
Context ctx_observers ip [ host="192.168.1.132" port=8360]//TODO metti ip giusto

QActor sonar_manager context ctx_sonar{
	import "main.java.*"
	State s0 initial {
		println("$name - STARTED") 
	}Goto waitCmd 
	 
	State waitCmd{  
		println("waiting ...") 
	}   
	Transition t0     
 		whenMsg sonarstart  -> turnSonarOn
		whenMsg sonarstop -> turnSonarOff
		
	State turnSonarOn{
		println("turning sonar on")
		[# Runtime.getRuntime().exec("python mqttReceiver.py")#]
		[# Runtime.getRuntime().exec("python SonarMqtt.py") #]
 		[# sonarOn = true 	#]
	}
	
	State turnSonarOff{
		println("turning sonar off")
		[# Runtime.getRuntime().exec("pkill -f SonarMqtt.py") #] //come lo stoppo in modo piÃ¹ carino?
		[# Runtime.getRuntime().exec("pkill -f mqttReceiver.py") #]
		[# sonarOn=false #]
	}
	
	State handleDistance{
		emitlocalstream distancestream : distancestream(D) //mettere val distanza letta
	}
	
}

QActor sonar_observer context ctx_observers{
	State s0 initial {  		
  		println("$name started")
  		subscribeTo sonar_manager for distancestream
	}	
	Goto work
	
	State work{
		
	}
	Transition t0
		whenEvent distancestream -> handleEvent
		
	State handleEvent{
		printCurrentMessage color magenta
	}
	Goto work
 }
